@model Portal.AdminSystem.Models.MemberViewModel

@{
    ViewBag.Title = "New Member";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <div class="Container2">
            <div class="left">
                <img src="~/Images/ecare.png" width:"100%"style="display: block;" />
                <h4 class="greyPortal"><strong>@ViewBag.Title</strong></h4>
            </div>
            <p class="right">
                <img src="~/Images/healthinsite.png" width:"100%"style="display: block;" />
            </p>
            <br />
            <br />
            <hr class="portalhr" />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group greyPortal">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group greyPortal">
                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group greyPortal">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group greyPortal">
                @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group greyPortal">
                @Html.LabelFor(model => model.ClientID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.ClientID, Model.ClientList, "Select Client", new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group greyPortal">
                @Html.LabelFor(model => model.UsergroupID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.UsergroupID, Model.UsergroupList, "Select Usergroup", new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Submit" class="portalbtn btn-default" />
                    <input type="reset" value="Reset" class="portalbtn btn-default" />
                    <input type="button" id="cancel" value="Cancel" class="portalbtn btn-default" onclick="location.href='@Url.Action("Index","Home")'; " />
                </div>
            </div>
        </div>
        </div>
}
<br />

<script type="text/javascript">
    $(document).ready(function () {
        $("#ClientID").change(function () {
            var selectedItem = $(this).val();
            var ddlUsergroup = $("#UsergroupID");
            var usergroupProgress = $("#usergroup-loading-progress");
            usergroupProgress.show();
            $.ajax({
                cache: false,
                type: "POST",
                url: "@(Url.RouteUrl("GetUsergroupByClientId"))",
                data: { "clientId": selectedItem },
            success: function (data) {
                ddlUsergroup.html('');
                $.each(data, function (id, option) {
                    ddlUsergroup.append($('<option></option>').val(option.UsergroupID).html(option.Description));
                });
                usergroupProgress.hide();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve Usergroups.');
                usergroupProgress.hide();
            }
        });
    });
    });

</script> 